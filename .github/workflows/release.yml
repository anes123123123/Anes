name: "Release"

on:
  push:
    branches: '*'
#      - master

jobs:
  windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Builder image
        env:
          TARGET_OS: Windows
        run: docker build --no-cache -t electrum-wine-builder-img ./contrib/build-wine/
      - name: Compile Linux tarball
        env:
          TARGET_OS: Windows
        run: docker run --name electrum-wine-builder-cont -v $PWD:/opt/wine64/drive_c/electrum --rm --workdir /opt/wine64/drive_c/electrum/contrib/build-wine electrum-wine-builder-img ./build.sh
      - name: Done
        run: ls -la contrib/build-wine/dist


  appimage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Builder image
        run: docker build --no-cache -t electrum-appimage-builder-img ./contrib/build-linux/appimage/
      - name: Compile Linux appimage
        run: docker run --name electrum-appimage-builder-cont -v $PWD:/opt/electrum --rm --workdir /opt/electrum/contrib/build-linux/appimage electrum-appimage-builder-img ./build.sh
      - name: Done
        run: ls -la dist

  tarball:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Builder image
        run: docker build --no-cache -t electrum-sdist-builder-img ./contrib/build-linux/sdist/
      - name: Compile Linux appimage
        run: |
          echo "Building sdist at $PWD"
          docker run --name electrum-sdist-builder-cont -v $PWD:/opt/electrum --rm --workdir /opt/electrum/contrib/build-linux/sdist electrum-sdist-builder-img ./build.sh
      - name: Done
        run: ls -la dist

  release:
    name: release
    runs-on: ubuntu-latest
    needs: [ tarball appimage windows ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download tarball build
        id: download-tarball
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Display structure of downloaded files
        run: |
          ls -R
          echo ${{steps.download-tarball.outputs.download-path}}
          ls -R ${{steps.download-tarball.outputs.download-path}}

      - name: Download appimage build
        id: download-appimage
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Display structure of downloaded files
        run: |
          ls -R
          echo ${{steps.download-appimage.outputs.download-path}}
          ls -R ${{steps.download-appimage.outputs.download-path}}

      - name: Download windows build
        id: download-windows
        uses: actions/download-artifact@v2
        with:
          path: contrib/build-wine/dist

      - name: Display structure of downloaded files
        run: |
          ls -R
          echo ${{steps.download-windows.outputs.download-path}}
          ls -R ${{steps.download-windows.outputs.download-path}}

#      - name: Python Semantic Release
#        uses: relekang/python-semantic-release@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          pypi_token: false
